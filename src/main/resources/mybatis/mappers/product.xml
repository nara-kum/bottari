<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<!-- 기존 쇼핑몰상품리스트 (페이징 없음) - 호환성을 위해 유지 -->
	<select id="selectList" resultType="com.example.vo.ProductVO">
	<![CDATA[
		select	product_no,
				category_no,
	            title,
	            price,
	            brand,
	            itemimg
		from product
		order by product_no desc
	]]>
	</select>

	<!-- 페이징 + 검색이 적용된 상품 리스트 조회 (강의와 동일한 로직) -->
	<select id="selectListWithPaging" parameterType="map" resultType="com.example.vo.ProductVO">
	<![CDATA[
		select	product_no,
				category_no,
	            title,
	            price,
	            brand,
	            itemimg
		from product
		where 1=1
	]]>
		<!-- 카테고리 필터 조건 (categoryNo가 있을 때만 적용) -->
	<if test="categoryNo != null and categoryNo != 0">
		and category_no = #{categoryNo}
	</if>
	
	<!-- 검색어 필터 조건 (kwd가 있고 비어있지 않을 때만 적용) -->
	<if test="kwd != null and kwd != ''">
		and (title like concat('%', #{kwd}, '%') 
		  or brand like concat('%', #{kwd}, '%'))
	</if>

	<!-- 가격 필터 조건 (수정됨: 새로운 가격 범위에 맞춤) -->
	<if test="priceRange != null and priceRange != 0">
		<choose>
			<when test="priceRange == 1">
				<!-- 3만원 미만 -->
				and CAST(price AS SIGNED) &lt; 30000
			</when>
			<when test="priceRange == 2">
				<!-- 3~5만원대 -->
				and CAST(price AS SIGNED) &gt;= 30000 
				and CAST(price AS SIGNED) &lt;= 59999
			</when>
			<when test="priceRange == 3">
				<!-- 6~9만원대 -->
				and CAST(price AS SIGNED) &gt;= 60000 
				and CAST(price AS SIGNED) &lt;= 99999
			</when>
			<when test="priceRange == 4">
				<!-- 10만원 이상 -->
				and CAST(price AS SIGNED) &gt;= 100000
			</when>
		</choose>
	</if>
	
	<![CDATA[
		order by 
	]]>
		<!-- 가격대별 정렬: 가격대를 선택했을 때는 가격 오름차순, 전체일 때는 최신순 -->
		<choose>
			<when test="priceRange != null and priceRange != 0">
				CAST(price AS SIGNED) asc, product_no desc
			</when>
			<otherwise>
				product_no desc
			</otherwise>
		</choose>
	<![CDATA[
		limit #{startRowNo}, #{listCnt}
	]]>
	</select>

	<!-- 전체 상품 개수 조회 - 검색 조건 + 가격 조건 포함 (수정됨) -->
	<select id="selectTotalCountByKwd" parameterType="map" resultType="int">
	<![CDATA[
		select count(*) count
		from product
		where 1=1
	]]>
		<!-- 카테고리 필터 조건 -->
		<if test="categoryNo != null and categoryNo != 0">
			and category_no = #{categoryNo}
		</if>
		
		<!-- 검색어 필터 조건 -->
		<if test="kwd != null and kwd != ''">
			and (title like concat('%', #{kwd}, '%') 
			  or brand like concat('%', #{kwd}, '%'))
		</if>
		
		<!-- 가격 필터 조건 (수정됨: 새로운 가격 범위에 맞춤) -->
		<if test="priceRange != null and priceRange != 0">
			<choose>
				<when test="priceRange == 1">
					<!-- 3만원 미만 -->
					and CAST(price AS SIGNED) &lt; 30000
				</when>
				<when test="priceRange == 2">
					<!-- 3~5만원대 -->
					and CAST(price AS SIGNED) &gt;= 30000 
					and CAST(price AS SIGNED) &lt;= 59999
				</when>
				<when test="priceRange == 3">
					<!-- 6~9만원대 -->
					and CAST(price AS SIGNED) &gt;= 60000 
					and CAST(price AS SIGNED) &lt;= 99999
				</when>
				<when test="priceRange == 4">
					<!-- 10만원 이상 -->
					and CAST(price AS SIGNED) &gt;= 100000
				</when>
			</choose>
		</if>
	</select>

	<!-- 상품 등록 -->
	<insert id="insert" parameterType="com.example.vo.ProductVO">
    <![CDATA[
        insert into product (category_no, title, price, brand, itemimg, 
                           shipping_yn, shipping_cost, zipcode, address, detail_address)
        values (#{category_no}, #{title}, #{price}, #{brand}, #{itemimg},
                #{shipping_yn}, #{shipping_cost}, #{zipcode}, #{address}, #{detail_address})
    ]]>
    <!-- auto_increment로 생성된 product_no를 VO에 설정 -->
    <selectKey keyProperty="product_no" resultType="int" order="AFTER">	
	     <![CDATA[
			select last_insert_id()
         ]]>        
	</selectKey>
	</insert>

	<!-- 상세이미지 등록 -->
	<insert id="detailImageInsert" parameterType="com.example.vo.DetailedImageVO">
		<![CDATA[
			insert into detail_image
			values(null, #{product_no}, #{image_URL}, #{turn})
		]]>
	</insert>

	<!-- 옵션 등록 -->
	<insert id="productOptionInsert" parameterType="com.example.vo.ProductOptionVO">
		<![CDATA[
			insert into product_option 
			values(null, #{product_no}, #{option_name})
		]]>
		<!-- auto_increment로 생성된 option_no를 VO에 설정 -->
		<selectKey keyProperty="option_no" resultType="int" order="AFTER">	
	     <![CDATA[
			select last_insert_id()
         ]]>        
		</selectKey>
	</insert>

	<!-- 디테일 옵션 등록 -->
	<insert id="detailOptionInsert" parameterType="com.example.vo.ProductOptionVO">
		<![CDATA[
			insert into option_detail
			values(null, #{option_no}, #{detailOPtion_name})
		]]>
	</insert>

	<!-- 상품 상세 조회 -->
	<select id="selectOne" parameterType="int" resultType="com.example.vo.ProductViewVO">
	    <![CDATA[
			select 	p.product_no
				   ,p.category_no
		           ,p.title
		           ,p.price
		           ,p.brand
		           ,p.itemimg
		           ,p.shipping_yn
		           ,p.shipping_cost
		           ,p.zipcode
		           ,p.address
		           ,p.detail_address
			from product p
			where p.product_no = #{productNo}
	    ]]>
	</select>

	<!--상품 상세 이미지들 -->
	<select id="selectImageList" parameterType="int" resultType="com.example.vo.DetailedImageVO">
		<![CDATA[
			select 	detail_image_no detailedImage_no
				   ,product_no
				   ,image_URL
				   ,turn
			from detail_image
			where product_no = #{productNo}
			order by turn asc
		]]>
	</select>

	<!-- 옵션명 리스트 -->
	<select id="selectOptionList" parameterType="int" resultType="com.example.vo.ProductOptionVO">
		<![CDATA[
			select 	option_no,
					product_no,
			        option_name
			from product_option
			where product_no = #{productNo}
			order by option_no asc
		]]>
	</select>

	<!-- 옵션상세(아이템) 리스트 -->
	<select id="selectOptionDetailList" parameterType="int" resultType="com.example.vo.ProductOptionDetailVO">
		<![CDATA[
			select 	detailoption_no,
					option_no,
                	detailoption_name
    		from option_detail
    		where option_no = #{optionNo}
		]]>
	</select>
	
	<!-- 펀딩상세페이지 -->
	<select id = "selectOneFunding" parameterType="int" resultType="com.example.vo.FundingProductVO">
		<![CDATA[
			select 	 fp.funding_no
					,fp.user_no
		            ,fp.event_no
		            ,fp.wishlist_no
		            ,fp.product_no
		            ,fp.percent
		            ,fp.amount
		            ,fp.funding_status
		            ,fp.funding_date
			from funding_product fp
			where fp.funding_no = #{fundingNo}
		]]>	
	</select>

	<!-- 선택한 펀딩 옵션과 옵션제목들 -->
	<select id="selectListFundingOption" parameterType="int" resultType="com.example.vo.FundingOptionViewVO">
		<![CDATA[
			select 	fo.funding_no,
			        po.product_no,
					po.option_no,
					po.option_name,
					od.detailoption_no,
		            od.detailoption_name
			from funding_option fo, option_detail od, product_option po
			where fo.funding_no = #{fundingNo}
			and od.detailoption_no = fo.detailoption_no
			and od.option_no = po.option_no
		]]>
	</select>
	
	<!-- 펀딩별 현재 총결제액 -->
	<select id="selectTotalPayForFundingNo" parameterType="int" resultType="int">
		<![CDATA[
			select ifnull(sum(p.payment_amount),0) totalpay
			from payment p
			where p.funding_no =  #{fundingNo}
		]]>
	</select>

	<!-- 장바구니 등록 -->
	<insert id="cartInsert" parameterType="com.example.vo.CartVO">
		<![CDATA[
			insert into cart (cart_no, user_no, product_no, category_no, Registration_date, quantity)
			values(null, #{user_no},#{product_no}, #{category_no},now(),#{quantity})
		]]>
		<!-- auto_increment로 생성된 cart_no를 VO에 설정 -->
		<selectKey keyProperty="cart_no" resultType="int" order="AFTER">	
        	<![CDATA[
            	select last_insert_id()
        	]]>        
    </selectKey>
	</insert>

	<!-- 장바구니 옵션 저장 -->
	<insert id="cartDetailOptionInsert" parameterType="com.example.vo.CartDetailOptionVO">
    <![CDATA[
        insert into cart_option (cart_no, detailoption_no) 
        values ( #{cart_no}, #{detailoption_no})
    ]]>
		<!-- auto_increment로 생성된 cartoption_no를 VO에 설정 -->
		<selectKey keyProperty="cartoption_no" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 위시리스트 등록 -->
	<insert id="wishlistInsert" parameterType="com.example.vo.WishlistVO">
	    <![CDATA[
	        insert into wishlist(wishlist_no, user_no, product_no, quantity, date)
	        values(null, #{userNo}, #{productNo}, #{quantity}, now())
	    ]]>
		<!-- auto_increment로 생성된 wishlist_no를 VO에 설정 -->
		<selectKey keyProperty="wishlistNo" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 위시리스트 옵션 저장 -->
	<insert id="wishlistOptionInsert" parameterType="com.example.vo.WishlistOptionVO">
    <![CDATA[
        insert into wishlist_option (wishlist_no, detailoption_no)
        values (#{wishlistNo}, #{detailoptionNo})
    ]]>
		<!-- auto_increment로 생성된 wishlistoption_no를 VO에 설정 -->
		<selectKey keyProperty="wishlistoptionNo" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

</mapper>